name: Sync NeoDB Data

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:

env:
  CATEGORIES: 'book,movie,music,podcast'  # 类别列表，用逗号分隔

jobs:
  neodb:
    name: Sync NeoDB Data
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Check JQ
      run: |
        if ! command -v jq &> /dev/null; then
          echo "jq is not installed. Installing..."
          sudo apt-get update
          sudo apt-get install -y jq
        else
          echo "jq is already installed."
        fi
        echo "WORK_DIR=$(pwd)" >> $GITHUB_ENV

    - name: Get Current Count
      run: |
        CURRENT_COUNT() {
          jq '.count' data/neodb/neodb.json
        }
        echo "CURRENT_COUNT=$(CURRENT_COUNT)" >> $GITHUB_ENV

    - name: Get NeoDB JSON and Count
      run: |
        download_and_count() {
          category=$1
          curl -X 'GET' \
          "https://neodb.social/api/me/shelf/complete?category=$category&page=1" \
          -H 'accept: application/json' \
          -H 'Authorization: Bearer ' > "${category}1.json"

          # 计算并打印每个类别的计数
          count=$(jq '.count' "${category}1.json")
          echo "${category} count: $count"
          echo "${category^^}_COUNT=$count" >> $GITHUB_ENV
        }

        # 遍历每个类别
        categories=("book" "movie" "music" "podcast")
        for category in "${categories[@]}"; do
          download_and_count $category
        done

        # 计算所有类别的总计数
        REMOTE_COUNT=$((${BOOK_COUNT:-0} + ${MOVIE_COUNT:-0} + ${MUSIC_COUNT:-0} + ${PODCAST_COUNT:-0}))
        echo "REMOTE_COUNT=$REMOTE_COUNT" >> $GITHUB_ENV

    - name: Count Compare
      run: |
        if [ "${{ env.REMOTE_COUNT }}" = "${{ env.CURRENT_COUNT }}" ]; then
          echo "Variables are equal. Skipping the next steps."
          exit 0
        else
          echo "Variables are not equal. Running the next steps."
        fi

    - name: Get All NeoDB Data
      if: ${{ env.REMOTE_COUNT != env.CURRENT_COUNT }}
      run: |
        mkdir -p neodb
        cd neodb
        IFS=',' read -r -a categories <<< "${{ env.CATEGORIES }}"
        for category in "${categories[@]}"; do
          # Extract the value of the pages field from JSON
          pages=$(jq '.pages' "../${category}1.json")
          for ((i=1; i<=$pages; i++)); do
            url="https://neodb.social/api/me/shelf/complete?category=$category&page=$i"
            filename="${category}$i.json"
            curl -X 'GET' "$url" -H 'accept: application/json' \
            -H 'Authorization: Bearer ${{ secrets.NEODB_ACCESS_TOKEN }}' > "$filename"
          done
        done
      # Combine all data into one file
        jq -c -s '{data: map(.data[]) | unique | sort_by(.created_time) | reverse, pages: map(.pages)[0], count: map(.count)[0]}' *.json > neodb.json
        cp -f neodb.json "${{ env.WORK_DIR }}/data/neodb/"


    - name: Download NeoDB Cover
      run: |
        if [ ! -d "movie" ]; then
          mkdir movie
        fi
        json=$(cat data/neodb/neodb.json)
        image_urls=$(echo "$json" | jq -r '.data[].item.cover_image_url')
        for url in $image_urls; do
          filename=$(basename "$url")
          filepath="data/neodb/cover/$filename"
          if [ ! -f "$filepath" ]; then
            curl -o "$filepath" "$url"
            echo "Downloaded $filename"
            echo "REMOTE_COUNT=''" >> $GITHUB_ENV
          fi
        done

    - name: Git Add and Commit
      if: ${{ env.REMOTE_COUNT != env.CURRENT_COUNT }}
      uses: EndBug/add-and-commit@v9
      with:
        message: 'chore(data): update neodb data'
        add: './data/neodb'
